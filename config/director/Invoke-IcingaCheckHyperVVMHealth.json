{"DataList":{"IcingaCheckHyperVVMHealth VmEnabledState":{"list_name":"IcingaCheckHyperVVMHealth VmEnabledState","originalId":"2","entries":[{"allowed_roles":null,"entry_value":"Unknown","entry_name":"Unknown","format":"string"},{"allowed_roles":null,"entry_value":"Other","entry_name":"Other","format":"string"},{"allowed_roles":null,"entry_value":"Enabled","entry_name":"Enabled","format":"string"},{"allowed_roles":null,"entry_value":"Disabled","entry_name":"Disabled","format":"string"},{"allowed_roles":null,"entry_value":"Shutting Down","entry_name":"Shutting Down","format":"string"},{"allowed_roles":null,"entry_value":"Not Applicable","entry_name":"Not Applicable","format":"string"},{"allowed_roles":null,"entry_value":"Enabled but Offline","entry_name":"Enabled but Offline","format":"string"},{"allowed_roles":null,"entry_value":"In Test","entry_name":"In Test","format":"string"},{"allowed_roles":null,"entry_value":"Deferred","entry_name":"Deferred","format":"string"},{"allowed_roles":null,"entry_value":"Quiesce","entry_name":"Quiesce","format":"string"},{"allowed_roles":null,"entry_value":"Starting","entry_name":"Starting","format":"string"}],"owner":"cstein"},"PowerShell ExecutionPolicies":{"list_name":"PowerShell ExecutionPolicies","originalId":"2","entries":[{"allowed_roles":null,"entry_value":"AllSigned","entry_name":"AllSigned","format":"string"},{"allowed_roles":null,"entry_value":"Bypass","entry_name":"Bypass","format":"string"},{"allowed_roles":null,"entry_value":"Default","entry_name":"Default","format":"string"},{"allowed_roles":null,"entry_value":"RemoteSigned","entry_name":"RemoteSigned","format":"string"},{"allowed_roles":null,"entry_value":"Restricted","entry_name":"Restricted","format":"string"},{"allowed_roles":null,"entry_value":"Undefined","entry_name":"Undefined","format":"string"},{"allowed_roles":null,"entry_value":"Unrestricted","entry_name":"Unrestricted","format":"string"}],"owner":"cstein"},"IcingaCheckHyperVVMHealth Verbosity":{"list_name":"IcingaCheckHyperVVMHealth Verbosity","originalId":"2","entries":[{"allowed_roles":null,"entry_value":"0","entry_name":"0","format":"string"},{"allowed_roles":null,"entry_value":"1","entry_name":"1","format":"string"},{"allowed_roles":null,"entry_value":"2","entry_name":"2","format":"string"},{"allowed_roles":null,"entry_value":"3","entry_name":"3","format":"string"}],"owner":"cstein"}},"Command":{"Invoke-IcingaCheckHyperVVMHealth":{"fields":[{"datafield_id":4,"is_required":"n","var_filter":null},{"datafield_id":5,"is_required":"n","var_filter":null},{"datafield_id":6,"is_required":"n","var_filter":null},{"datafield_id":7,"is_required":"n","var_filter":null},{"datafield_id":8,"is_required":"n","var_filter":null},{"datafield_id":9,"is_required":"n","var_filter":null},{"datafield_id":10,"is_required":"n","var_filter":null},{"datafield_id":11,"is_required":"n","var_filter":null},{"datafield_id":12,"is_required":"n","var_filter":null},{"datafield_id":13,"is_required":"n","var_filter":null},{"datafield_id":14,"is_required":"n","var_filter":null},{"datafield_id":15,"is_required":"n","var_filter":null}],"object_name":"Invoke-IcingaCheckHyperVVMHealth","arguments":{"-VmEnabledState":{"value":"$IcingaCheckHyperVVMHealth_Object_VmEnabledState$","order":"7"},"-NegateVMState":{"set_if":"$IcingaCheckHyperVVMHealth_Switchparameter_NegateVMState$","set_if_format":"string","order":"99"},"-ThresholdInterval":{"set_if":"var str = macro(\"$IcingaCheckHyperVVMHealth_String_ThresholdInterval$\"); if (len(str) == 0) { return false; }; return true;","set_if_format":"expression","value":{"body":"var str = macro(\"$IcingaCheckHyperVVMHealth_String_ThresholdInterval$\");\r\nvar argLen = len(str);\r\n\r\nif (argLen == 0) {\r\n    return;\r\n}\r\n\r\nif (argLen != 0 \u0026\u0026 str.substr(0,1) == \"\u0027\" \u0026\u0026 str.substr(argLen - 1, argLen) == \"\u0027\") {\r\n    return str;\r\n}\r\n\r\nreturn (\"\u0027\" + str + \"\u0027\");","type":"Function"},"order":"100"},"-Verbosity":{"value":"$IcingaCheckHyperVVMHealth_Object_Verbosity$","order":"8"},"-CriticalActiveVms":{"value":"$IcingaCheckHyperVVMHealth_Object_CriticalActiveVms$","order":"5"},"-SkipVMHeartbeat":{"set_if":"$IcingaCheckHyperVVMHealth_Switchparameter_SkipVMHeartbeat$","set_if_format":"string","order":"99"},"-BlackoutTimesEventDelta":{"set_if":"var str = macro(\"$IcingaCheckHyperVVMHealth_String_BlackoutTimesEventDelta$\"); if (len(str) == 0) { return false; }; return true;","set_if_format":"expression","value":{"body":"var str = macro(\"$IcingaCheckHyperVVMHealth_String_BlackoutTimesEventDelta$\");\r\nvar argLen = len(str);\r\n\r\nif (argLen == 0) {\r\n    return;\r\n}\r\n\r\nif (argLen != 0 \u0026\u0026 str.substr(0,1) == \"\u0027\" \u0026\u0026 str.substr(argLen - 1, argLen) == \"\u0027\") {\r\n    return str;\r\n}\r\n\r\nreturn (\"\u0027\" + str + \"\u0027\");","type":"Function"},"order":"6"},"-NoPerfData":{"set_if":"$IcingaCheckHyperVVMHealth_Switchparameter_NoPerfData$","set_if_format":"string","order":"99"},"-ExcludeVms":{"value":{"body":"var arr = macro(\"$IcingaCheckHyperVVMHealth_Array_ExcludeVms$\");\r\n\r\nif (len(arr) == 0) {\r\n    return \"@()\";\r\n}\r\n\r\nvar psarr = arr.map(\r\n    x =\u003e if (typeof(x) == String) {\r\n        var argLen = len(x);\r\n        if (argLen != 0 \u0026\u0026 x.substr(0,1) == \"\u0027\" \u0026\u0026 x.substr(argLen - 1, argLen) == \"\u0027\") {\r\n            x;\r\n        } else {\r\n            \"\u0027\" + x + \"\u0027\";\r\n        }\r\n    } else {\r\n        x;\r\n    }\r\n).join(\",\");\r\n\r\nreturn \"@(\" + psarr + \")\";","type":"Function"},"order":"3"},"-WarningActiveVms":{"value":"$IcingaCheckHyperVVMHealth_Object_WarningActiveVms$","order":"4"},"-IncludeVms":{"value":{"body":"var arr = macro(\"$IcingaCheckHyperVVMHealth_Array_IncludeVms$\");\r\n\r\nif (len(arr) == 0) {\r\n    return \"@()\";\r\n}\r\n\r\nvar psarr = arr.map(\r\n    x =\u003e if (typeof(x) == String) {\r\n        var argLen = len(x);\r\n        if (argLen != 0 \u0026\u0026 x.substr(0,1) == \"\u0027\" \u0026\u0026 x.substr(argLen - 1, argLen) == \"\u0027\") {\r\n            x;\r\n        } else {\r\n            \"\u0027\" + x + \"\u0027\";\r\n        }\r\n    } else {\r\n        x;\r\n    }\r\n).join(\",\");\r\n\r\nreturn \"@(\" + psarr + \")\";","type":"Function"},"order":"2"},"-ActiveVms":{"set_if":"$IcingaCheckHyperVVMHealth_Switchparameter_ActiveVms$","set_if_format":"string","order":"99"}},"imports":["PowerShell Base"],"object_type":"object","vars":{"ifw_api_arguments":{"SkipVMHeartbeat":{"set_if":"$IcingaCheckHyperVVMHealth_Switchparameter_SkipVMHeartbeat$"},"ThresholdInterval":{"value":"$IcingaCheckHyperVVMHealth_String_ThresholdInterval$"},"ExcludeVms":{"value":"$IcingaCheckHyperVVMHealth_Array_ExcludeVms$"},"ActiveVms":{"set_if":"$IcingaCheckHyperVVMHealth_Switchparameter_ActiveVms$"},"CriticalActiveVms":{"value":"$IcingaCheckHyperVVMHealth_Object_CriticalActiveVms$"},"NegateVMState":{"set_if":"$IcingaCheckHyperVVMHealth_Switchparameter_NegateVMState$"},"VmEnabledState":{"value":"$IcingaCheckHyperVVMHealth_Object_VmEnabledState$"},"BlackoutTimesEventDelta":{"value":"$IcingaCheckHyperVVMHealth_String_BlackoutTimesEventDelta$"},"NoPerfData":{"set_if":"$IcingaCheckHyperVVMHealth_Switchparameter_NoPerfData$"},"IncludeVms":{"value":"$IcingaCheckHyperVVMHealth_Array_IncludeVms$"},"WarningActiveVms":{"value":"$IcingaCheckHyperVVMHealth_Object_WarningActiveVms$"},"Verbosity":{"value":"$IcingaCheckHyperVVMHealth_Object_Verbosity$"}},"IcingaCheckHyperVVMHealth_Switchparameter_ActiveVms":false,"IcingaCheckHyperVVMHealth_Switchparameter_NoPerfData":false,"IcingaCheckHyperVVMHealth_Switchparameter_SkipVMHeartbeat":false,"ifw_api_command":"Invoke-IcingaCheckHyperVVMHealth","IcingaCheckHyperVVMHealth_Switchparameter_NegateVMState":false}},"PowerShell Base":{"methods_execute":"PluginCheck","object_name":"PowerShell Base","vars":{"IcingaPowerShellBase_String_ExecutionPolicy":"ByPass"},"is_string":null,"command":"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe","zone":null,"disabled":false,"fields":[{"datafield_id":2,"is_required":"n","var_filter":null}],"arguments":{"-C":{"value":"try { Use-Icinga -Minimal; } catch { Write-Output \u0027The Icinga PowerShell Framework is either not installed on the system or not configured properly. Please check https://icinga.com/docs/windows for further details\u0027; Write-Output \u0027Error:\u0027 $$($$_.Exception.Message)Components:`r`n$$( Get-Module -ListAvailable \u0027icinga-powershell-*\u0027 )`r`n\u0027Module-Path:\u0027`r`n$$($$Env:PSModulePath); exit 3; }; Exit-IcingaExecutePlugin -Command \u0027$ifw_api_command$\u0027 ","order":"0"},"-ExecutionPolicy":{"value":"$IcingaPowerShellBase_String_ExecutionPolicy$","order":"-1"},"-NoProfile":{"value":"-NoProfile","skip_key":true,"order":"-3"},"-NoLogo":{"value":"-NoLogo","skip_key":true,"order":"-2"}},"imports":[],"object_type":"object","timeout":"180"}},"Datafield":{"7":{"settings":{"visibility":"visible"},"description":"Include only virtual machines that are currently running","caption":"ActiveVms","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeBoolean","originalId":"7","varname":"IcingaCheckHyperVVMHealth_Switchparameter_ActiveVms","format":null},"5":{"settings":{"visibility":"visible"},"description":"Include only virtual machines with a specific name. Supports wildcard usage (*)","caption":"IncludeVms","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeArray","originalId":"5","varname":"IcingaCheckHyperVVMHealth_Array_IncludeVms","format":null},"12":{"settings":{"visibility":"visible"},"description":"Skips the current virtual machine heartbeat status check.","caption":"SkipVMHeartbeat","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeBoolean","originalId":"12","varname":"IcingaCheckHyperVVMHealth_Switchparameter_SkipVMHeartbeat","format":null},"10":{"settings":{"visibility":"visible"},"description":"Defines a time range (example \"-5d\") to filter for any BlackoutTime log entries older than the provided time range.\nIn case a warning BlackoutTime is triggered and older than the provided threshold, the value is printed with an \"OK\" state\ninstead of \"WARNING\"","caption":"BlackoutTimesEventDelta","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"10","varname":"IcingaCheckHyperVVMHealth_String_BlackoutTimesEventDelta","format":null},"2":{"settings":{"datalist":"PowerShell ExecutionPolicies","behavior":"strict","data_type":"string"},"description":"Defines with which Execution Policy the PowerShell is started","caption":"PowerShell Execution Policy","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeDatalist","originalId":"2","varname":"IcingaPowerShellBase_String_ExecutionPolicy","format":null},"8":{"settings":{"visibility":"visible"},"description":"Allows to monitor on how many active VM\u0027s are currently present and throws a\nwarning in case it is within the threshold","caption":"WarningActiveVms","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"8","varname":"IcingaCheckHyperVVMHealth_Object_WarningActiveVms","format":null},"11":{"settings":{"visibility":"visible"},"description":"Disables the performance data output of this plugin.","caption":"NoPerfData","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeBoolean","originalId":"11","varname":"IcingaCheckHyperVVMHealth_Switchparameter_NoPerfData","format":null},"9":{"settings":{"visibility":"visible"},"description":"Allows to monitor on how many active VM\u0027s are currently present and throws a\nwarning in case it is within the threshold","caption":"CriticalActiveVms","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"9","varname":"IcingaCheckHyperVVMHealth_Object_CriticalActiveVms","format":null},"14":{"settings":{"visibility":"visible"},"description":"Negates the VmEnabledState of this plugin and will then report all Vms\nCRITICAL, in case they are not matching the VmEnabledState.","caption":"NegateVMState","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeBoolean","originalId":"14","varname":"IcingaCheckHyperVVMHealth_Switchparameter_NegateVMState","format":null},"15":{"settings":{"datalist":"IcingaCheckHyperVVMHealth Verbosity","behavior":"strict","data_type":"string"},"description":"Changes the behavior of the plugin output which check states are printed:\n0 (default): Only service checks/packages with state not OK will be printed\n1: Only services with not OK will be printed including OK checks of affected check packages including Package config\n2: Everything will be printed regardless of the check state\n3: Identical to Verbose 2, but prints in addition the check package configuration e.g (All must be [OK])","caption":"Verbosity","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeDatalist","originalId":"15","varname":"IcingaCheckHyperVVMHealth_Object_Verbosity","format":null},"6":{"settings":{"visibility":"visible"},"description":"Exclude virtual machines with a specific name. Supports wildcard usage (*)","caption":"ExcludeVms","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeArray","originalId":"6","varname":"IcingaCheckHyperVVMHealth_Array_ExcludeVms","format":null},"4":{"settings":{"visibility":"visible"},"description":"Change the value your defined threshold checks against from the current value to a collected time threshold of the Icinga for Windows daemon, as described here: https://icinga.com/docs/icinga-for-windows/latest/doc/service/10-Register-Service-Checks/ An example for this argument would be 1m or 15m which will use the average of 1m or 15m for monitoring.","caption":"ThresholdInterval","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeString","originalId":"4","varname":"IcingaCheckHyperVVMHealth_String_ThresholdInterval","format":null},"13":{"settings":{"datalist":"IcingaCheckHyperVVMHealth VmEnabledState","behavior":"strict","data_type":"string"},"description":"Critical threshold for the Hyper-V VM current status","caption":"VmEnabledState","datatype":"Icinga\\Module\\Director\\DataType\\DataTypeDatalist","originalId":"13","varname":"IcingaCheckHyperVVMHealth_Object_VmEnabledState","format":null}}}
