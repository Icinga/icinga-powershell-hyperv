object CheckCommand "Invoke-IcingaCheckHyperVVirtualSwitches" {
    import "PowerShell Base"

    arguments += {
        "-C" = {
            value = "try { Use-Icinga; } catch { Write-Output 'The Icinga PowerShell Framework is either not installed on the system or not configured properly. Please check https://icinga.com/docs/windows for further details'; exit 3; }; Exit-IcingaPluginNotInstalled 'Invoke-IcingaCheckHyperVVirtualSwitches'; exit Invoke-IcingaCheckHyperVVirtualSwitches"
            order = 0
        }
        "-Verbosity" = {
            description = "Changes the behavior of the plugin output which check states are printed: 0 (default): Only service checks/packages with state not OK will be printed 1: Only services with not OK will be printed including OK checks of affected check packages including Package config 2: Everything will be printed regardless of the check state"
            value = "$IcingaCheckHyperVVirtualSwitches_Object_Verbosity$"
            order = 6
        }
        "-Include" = {
            description = "With this parameter you can filter virtual switches for the check in. e.g. testswitch1, testswitch1."
            value = {{
                var arr = macro("$IcingaCheckHyperVVirtualSwitches_Array_Include$");
                if (len(arr) == 0) {
                return "@()";
                }
                return arr.join(",");
            }}
            order = 2
        }
        "-Internal" = {
            set_if = "$IcingaCheckHyperVVirtualSwitches_Switchparameter_Internal$"
            set_if_format = "string"
            order = 99
        }
        "-Warning" = {
            description = "Warning threshold for Switch Status indicates that an element is functioning properly, but is predicating a failure."
            value = {{
                var arr = macro("$IcingaCheckHyperVVirtualSwitches_Array_Warning$");
                if (len(arr) == 0) {
                return "@()";
                }
                return arr.join(",");
            }}
            order = 4
        }
        "-Critical" = {
            description = "Critical threshold for Switch Status indicates that an element is functioning properly, but is predicating a failure."
            value = {{
                var arr = macro("$IcingaCheckHyperVVirtualSwitches_Array_Critical$");
                if (len(arr) == 0) {
                return "@()";
                }
                return arr.join(",");
            }}
            order = 5
        }
        "-NoPerfData" = {
            set_if = "$IcingaCheckHyperVVirtualSwitches_Switchparameter_NoPerfData$"
            set_if_format = "string"
            order = 99
        }
        "-Exclude" = {
            description = "With this parameter you can filter out virtual switches for the check. e.g. testswitch1, testswitch1."
            value = {{
                var arr = macro("$IcingaCheckHyperVVirtualSwitches_Array_Exclude$");
                if (len(arr) == 0) {
                return "@()";
                }
                return arr.join(",");
            }}
            order = 3
        }
        "-External" = {
            set_if = "$IcingaCheckHyperVVirtualSwitches_Switchparameter_External$"
            set_if_format = "string"
            order = 99
        }
    }
    vars.IcingaCheckHyperVVirtualSwitches_Switchparameter_Internal = False
    vars.IcingaCheckHyperVVirtualSwitches_Switchparameter_External = False
    vars.IcingaCheckHyperVVirtualSwitches_Switchparameter_NoPerfData = False
}
